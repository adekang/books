[
  {
    "text": "1 如何阅读本小册",
    "link": "/docs/ts-learn/1 如何阅读本小册"
  },
  {
    "text": "2 为什么说 TypeScript 的火爆是必然？",
    "link": "/docs/ts-learn/2 为什么说 TypeScript 的火爆是必然？"
  },
  {
    "text": "3 TypeScript 类型编程为什么被叫做类型体操？",
    "link": "/docs/ts-learn/3 TypeScript 类型编程为什么被叫做类型体操？"
  },
  {
    "text": "4 TypeScript 类型系统支持哪些类型和类型运算？",
    "link": "/docs/ts-learn/4 TypeScript 类型系统支持哪些类型和类型运算？"
  },
  {
    "text": "5 套路一：模式匹配做提取",
    "link": "/docs/ts-learn/5 套路一：模式匹配做提取"
  },
  {
    "text": "6 套路二：重新构造做变换",
    "link": "/docs/ts-learn/6 套路二：重新构造做变换"
  },
  {
    "text": "7 套路三：递归复用做循环",
    "link": "/docs/ts-learn/7 套路三：递归复用做循环"
  },
  {
    "text": "8 套路四：数组长度做计数",
    "link": "/docs/ts-learn/8 套路四：数组长度做计数"
  },
  {
    "text": "9 套路五：联合分散可简化",
    "link": "/docs/ts-learn/9 套路五：联合分散可简化"
  },
  {
    "text": "10 套路六：特殊特性要记清",
    "link": "/docs/ts-learn/10 套路六：特殊特性要记清"
  },
  {
    "text": "11 类型体操顺口溜",
    "link": "/docs/ts-learn/11 类型体操顺口溜"
  },
  {
    "text": "12 TypeScript 内置的高级类型有哪些？",
    "link": "/docs/ts-learn/12 TypeScript 内置的高级类型有哪些？"
  },
  {
    "text": "13 真实案例说明类型编程的意义",
    "link": "/docs/ts-learn/13 真实案例说明类型编程的意义"
  },
  {
    "text": "14 类型编程综合实战一",
    "link": "/docs/ts-learn/14 类型编程综合实战一"
  },
  {
    "text": "15 类型编程综合实战二",
    "link": "/docs/ts-learn/15 类型编程综合实战二"
  },
  {
    "text": "16 新语法 infer extends 是如何简化类型编程的",
    "link": "/docs/ts-learn/16 新语法 infer extends 是如何简化类型编程的"
  },
  {
    "text": "17 原理篇：逆变、协变、双向协变、不变",
    "link": "/docs/ts-learn/17 原理篇：逆变、协变、双向协变、不变"
  },
  {
    "text": "18 原理篇：编译 ts 代码用 tsc 还是 babel？",
    "link": "/docs/ts-learn/18 原理篇：编译 ts 代码用 tsc 还是 babel？"
  },
  {
    "text": "19 原理篇：实现简易 TypeScript 类型检查 ",
    "link": "/docs/ts-learn/19 原理篇：实现简易 TypeScript 类型检查 "
  },
  {
    "text": "20 原理篇：如何阅读 TypeScript 源码",
    "link": "/docs/ts-learn/20 原理篇：如何阅读 TypeScript 源码"
  },
  {
    "text": "21 原理篇：一些特殊情况的说明",
    "link": "/docs/ts-learn/21 原理篇：一些特殊情况的说明"
  },
  {
    "text": "22 小册总结",
    "link": "/docs/ts-learn/22 小册总结"
  },
  {
    "text": "23 加餐：3 种类型来源和 3 种模块语法",
    "link": "/docs/ts-learn/23 加餐：3 种类型来源和 3 种模块语法"
  },
  {
    "text": "24 加餐：用 Project Reference 优化 tsc 编译性能",
    "link": "/docs/ts-learn/24 加餐：用 Project Reference 优化 tsc 编译性能"
  },
  {
    "text": "25 加餐：一道 3 层的 ts 面试题",
    "link": "/docs/ts-learn/25 加餐：一道 3 层的 ts 面试题"
  },
  {
    "text": "26 加餐：项目中 2 个真实的类型编程案例",
    "link": "/docs/ts-learn/26 加餐：项目中 2 个真实的类型编程案例"
  },
  {
    "text": "27 加餐：TypeScript 新语法 satisfies：用声明 or 用推导？",
    "link": "/docs/ts-learn/27 加餐：TypeScript 新语法 satisfies：用声明 or 用推导？"
  }
]